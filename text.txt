
﻿cd path - перемещаемся по папкам
git init - создаем .git
git status - статус
git add /name of file/ или . для всех
git commit -m "comment" - коммит с комментом
git remote add origin /url репозитория/ залить на гитхаб
git push -u origin master
git remote remove origin - удалить ссылку, которую ты подготовил к заливу
git clone url - клонировать репозиторий с гитхаба
git config --global user.name "name" - войти под именем
git config -- global user.email "mail" - email
git config --list - лист конфигов
git help команда - help в браузере
touch filename - создание файла
mkdir name - создание папки 
# comment - комментарий в гитигнор
папка/ игнорить все в папке
*.txt - игнорить все с расширением txt
git status -untracked-files=all/normal посмотреть неотслеживаеміе файлы
git rm --cached file - для удаления из отслеживания гита
git reset HEAD <file> - тоже самое, что и предидущее
git checkout -- file откатить к состоянию, которое находится в репозитории
git log - показать лог коммитов
git log --pretty=format:"%h - %an, %ar: %s" - %h - сокращенный хэш %an - автор %ar - дата %s - комментарий(название коммита)
git help log - справка лога (там ключи)
git log -- since=2.weeks - коммиты за последние 2 недели
git log -p -2 - изменения в последних 2х коммитах (-p - просмотр изменений -2 - колличество коммитов)
git commit - закомитить с использованием редактора комментариев
В САМОМ РЕДАКТОРЕ Ввести коммент ->ESC -> :x- выйти из редактора VIM и сохранить изменения
git config --global core.editor "'C:/Windows/System32/notepad.exe' - multiInst -notabbar -nosession -noPlugin"
git config --global core.editor "'C:\Program Files\Windows NT\Accessories\wordpad.exe' -multiInst -notabbar -nosession -noPlugin"﻿ 
git checkout -b 'new_f' - создание новой ветки(сразу переходим в нее)
git branch -v - инфа по веткам
git branch new_f2 - создание ветки
git checkout nazva - переключение между ветками
git merge назв метка


